/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.pase;

import controller.data.ControladorPase;
import controller.form.ControladorFrmPasePrincipal;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import model.constant.ListaCaracteresNoValidos;
import view.user.FrmUser;

/**
 *
 * @author wally86
 */
public class FrmPaseCRUD extends javax.swing.JInternalFrame {

    private FrmUser frmUsuario;
    private ControladorFrmPasePrincipal controladorFrmPasePrincipal;
    private ControladorPase controladorPase;
    private char tipoTitular;

    /**
     * Creates new form FrmPasePrincipal
     *
     * @param frmUsuario
     */
    public FrmPaseCRUD(FrmUser frmUsuario, char tipoTitular) {
        initComponents();
        this.frmUsuario = frmUsuario;
        this.controladorFrmPasePrincipal = new ControladorFrmPasePrincipal();
        this.controladorFrmPasePrincipal.ocultarLabelsInformativos(this);
        this.controladorPase = new ControladorPase();
        this.tipoTitular=tipoTitular;
        cargarDatos();
    }

    private void cargarDatos(){
        txtIdHardware.setText(frmUsuario.getControladorAlumno().getNetbook().getIdHardware());
        controladorFrmPasePrincipal.deshabilitarTxtField(txtIdHardware);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtServidor = new javax.swing.JTextField();
        txtSn = new javax.swing.JTextField();
        txtMarcaArranque = new javax.swing.JTextField();
        txtIdHardware = new javax.swing.JTextField();
        btnAceptar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        lblNumeroServidor = new javax.swing.JLabel();
        lblNumeroSn = new javax.swing.JLabel();
        lblMarcaArranque = new javax.swing.JLabel();
        lblIdHardware = new javax.swing.JLabel();
        lblInfoServidor = new javax.swing.JLabel();
        lblInfoSn = new javax.swing.JLabel();
        lblInfoMarcaArranque = new javax.swing.JLabel();
        lblInfoIdHard = new javax.swing.JLabel();

        setTitle("SOLICITUD DE PASE");
        setFrameIcon(null);
        setMinimumSize(new java.awt.Dimension(400, 290));
        setPreferredSize(new java.awt.Dimension(400, 290));
        getContentPane().setLayout(null);

        txtServidor.setPreferredSize(new java.awt.Dimension(150, 26));
        txtServidor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtServidorKeyTyped(evt);
            }
        });
        getContentPane().add(txtServidor);
        txtServidor.setBounds(170, 13, 150, 26);

        txtSn.setPreferredSize(new java.awt.Dimension(150, 26));
        txtSn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSnKeyTyped(evt);
            }
        });
        getContentPane().add(txtSn);
        txtSn.setBounds(170, 60, 150, 26);

        txtMarcaArranque.setPreferredSize(new java.awt.Dimension(150, 26));
        txtMarcaArranque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMarcaArranqueKeyTyped(evt);
            }
        });
        getContentPane().add(txtMarcaArranque);
        txtMarcaArranque.setBounds(170, 110, 150, 26);

        txtIdHardware.setPreferredSize(new java.awt.Dimension(150, 26));
        txtIdHardware.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdHardwareKeyTyped(evt);
            }
        });
        getContentPane().add(txtIdHardware);
        txtIdHardware.setBounds(170, 160, 150, 26);

        btnAceptar.setText("Guardar");
        btnAceptar.setMaximumSize(new java.awt.Dimension(120, 26));
        btnAceptar.setMinimumSize(new java.awt.Dimension(120, 26));
        btnAceptar.setPreferredSize(new java.awt.Dimension(120, 26));
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAceptar);
        btnAceptar.setBounds(40, 220, 120, 26);

        btnSalir.setText("Cancelar");
        btnSalir.setMaximumSize(new java.awt.Dimension(120, 26));
        btnSalir.setMinimumSize(new java.awt.Dimension(120, 26));
        btnSalir.setPreferredSize(new java.awt.Dimension(120, 26));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir);
        btnSalir.setBounds(230, 220, 120, 26);

        lblNumeroServidor.setFont(new java.awt.Font("Cantarell", 1, 12)); // NOI18N
        lblNumeroServidor.setText("Numero Servidor");
        getContentPane().add(lblNumeroServidor);
        lblNumeroServidor.setBounds(10, 15, 120, 16);

        lblNumeroSn.setFont(new java.awt.Font("Cantarell", 1, 12)); // NOI18N
        lblNumeroSn.setText("Numero Especial(S/N)");
        getContentPane().add(lblNumeroSn);
        lblNumeroSn.setBounds(10, 60, 150, 16);

        lblMarcaArranque.setFont(new java.awt.Font("Cantarell", 1, 12)); // NOI18N
        lblMarcaArranque.setText("Marca de Arranque");
        getContentPane().add(lblMarcaArranque);
        lblMarcaArranque.setBounds(10, 110, 140, 16);

        lblIdHardware.setFont(new java.awt.Font("Cantarell", 1, 12)); // NOI18N
        lblIdHardware.setText("Id Hardware");
        getContentPane().add(lblIdHardware);
        lblIdHardware.setBounds(10, 160, 120, 16);

        lblInfoServidor.setFont(new java.awt.Font("Cantarell", 2, 10)); // NOI18N
        lblInfoServidor.setForeground(new java.awt.Color(241, 14, 14));
        lblInfoServidor.setText("Longitud max. de 12 caracteres alfanumericos");
        getContentPane().add(lblInfoServidor);
        lblInfoServidor.setBounds(130, 35, 230, 20);

        lblInfoSn.setFont(new java.awt.Font("Cantarell", 2, 10)); // NOI18N
        lblInfoSn.setForeground(new java.awt.Color(241, 14, 14));
        lblInfoSn.setText("Longitud max. de 20 caracteres alfanumericos");
        getContentPane().add(lblInfoSn);
        lblInfoSn.setBounds(130, 80, 215, 20);

        lblInfoMarcaArranque.setFont(new java.awt.Font("Cantarell", 2, 10)); // NOI18N
        lblInfoMarcaArranque.setForeground(new java.awt.Color(241, 14, 14));
        lblInfoMarcaArranque.setText("Longitud max. 2 caracteres alfanumericos");
        getContentPane().add(lblInfoMarcaArranque);
        lblInfoMarcaArranque.setBounds(130, 130, 220, 20);

        lblInfoIdHard.setFont(new java.awt.Font("Cantarell", 2, 10)); // NOI18N
        lblInfoIdHard.setForeground(new java.awt.Color(241, 14, 14));
        lblInfoIdHard.setText("Longitud max. de 12 caracteres alfanumericos");
        getContentPane().add(lblInfoIdHard);
        lblInfoIdHard.setBounds(130, 180, 230, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // TODO add your handling code here:
        int respusta = JOptionPane.showConfirmDialog(this, "¿Esta seguro de solicitar el pase?", "Confirmar Pase", JOptionPane.YES_NO_OPTION);
        if (respusta == JOptionPane.YES_OPTION) {
            if(controladorFrmPasePrincipal.validarCampos()){
            //verifica que no exista el pase para la netbook
            if(!controladorPase.verificarExistencia(frmUsuario.getControladorAlumno().getNetbook())){
            controladorPase.agregarPase(this);
            JOptionPane.showMessageDialog(this, "Se Agrego el pase correctamente");
            frmUsuario.getControladorFormularioUsuario().actualizarCantidadPases(frmUsuario);
            dispose();
            }else{
                JOptionPane.showMessageDialog(this, "Imposible Solicitar Pase, ya se solicito para esta netbook");
            }
            }else{
                JOptionPane.showMessageDialog(this, "Verifique que los Datos ingresados sean correctos");
            }
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void txtServidorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtServidorKeyTyped
        // TODO add your handling code here:
        String servidor = txtServidor.getText();
        if(servidor.length() >=12){
            evt.consume();
            controladorFrmPasePrincipal.mostrarLabel(lblInfoServidor);
            controladorFrmPasePrincipal.setEstadoNumeroServidor(false);
        }else{
            controladorFrmPasePrincipal.ocultarLabel(lblInfoServidor);
            controladorFrmPasePrincipal.setEstadoNumeroServidor(true);
        }
        for(Character c : ListaCaracteresNoValidos.LISTA){
            if(evt.getKeyChar()==c){
                evt.consume();
                controladorFrmPasePrincipal.mostrarLabel(lblInfoServidor);
                controladorFrmPasePrincipal.setEstadoNumeroServidor(false);
            }
        }
        
    }//GEN-LAST:event_txtServidorKeyTyped

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        int respusta = JOptionPane.showConfirmDialog(this, "¿Desea salir?", "Salir", JOptionPane.YES_NO_OPTION);
        if (respusta == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_btnSalirActionPerformed

    private void txtIdHardwareKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdHardwareKeyTyped
        // TODO add your handling code here:
        String idHardware = txtIdHardware.getText();
        if(idHardware.length() >=12){
            evt.consume();
            controladorFrmPasePrincipal.mostrarLabel(lblInfoIdHard);
        }else{
            controladorFrmPasePrincipal.ocultarLabel(lblInfoIdHard);
        }
         for(Character c : ListaCaracteresNoValidos.LISTA){
            if(evt.getKeyChar()==c){
                evt.consume();
                controladorFrmPasePrincipal.mostrarLabel(lblInfoIdHard);
            }
        }
    }//GEN-LAST:event_txtIdHardwareKeyTyped

    private void txtSnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSnKeyTyped
        // TODO add your handling code here:
        String sn = txtSn.getText();
        if(sn.length() >=20){
            evt.consume();
            controladorFrmPasePrincipal.mostrarLabel(lblInfoSn);
            controladorFrmPasePrincipal.setEstadoSN(false);
        }else{
            controladorFrmPasePrincipal.ocultarLabel(lblInfoSn);
            controladorFrmPasePrincipal.setEstadoSN(true);
        }
         for(Character c : ListaCaracteresNoValidos.LISTA){
            if(evt.getKeyChar()==c){
                evt.consume();
                controladorFrmPasePrincipal.mostrarLabel(lblInfoSn);
                controladorFrmPasePrincipal.setEstadoSN(false);
            }
        }
        
    }//GEN-LAST:event_txtSnKeyTyped

    private void txtMarcaArranqueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMarcaArranqueKeyTyped
        // TODO add your handling code here:
        String bitArranque = txtMarcaArranque.getText();
        if(bitArranque.length() >=2){          
            controladorFrmPasePrincipal.mostrarLabel(lblInfoMarcaArranque);
            evt.consume();
            controladorFrmPasePrincipal.setEstadoMarcaArranque(false);
        }else{
            controladorFrmPasePrincipal.ocultarLabel(lblInfoMarcaArranque);
            controladorFrmPasePrincipal.setEstadoMarcaArranque(true);
        }
        for(Character c : ListaCaracteresNoValidos.LISTA){
            if(evt.getKeyChar()==c){    
                controladorFrmPasePrincipal.mostrarLabel(lblInfoMarcaArranque);
                evt.consume();
                controladorFrmPasePrincipal.setEstadoMarcaArranque(false);
            }
        }
        
    }//GEN-LAST:event_txtMarcaArranqueKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel lblIdHardware;
    private javax.swing.JLabel lblInfoIdHard;
    private javax.swing.JLabel lblInfoMarcaArranque;
    private javax.swing.JLabel lblInfoServidor;
    private javax.swing.JLabel lblInfoSn;
    private javax.swing.JLabel lblMarcaArranque;
    private javax.swing.JLabel lblNumeroServidor;
    private javax.swing.JLabel lblNumeroSn;
    private javax.swing.JTextField txtIdHardware;
    private javax.swing.JTextField txtMarcaArranque;
    private javax.swing.JTextField txtServidor;
    private javax.swing.JTextField txtSn;
    // End of variables declaration//GEN-END:variables
    public JLabel getLabelInfoMarcaArranque() {
        return lblInfoMarcaArranque;
    }

    public JLabel getLabelInfoServidor() {
        return lblInfoServidor;
    }

    public JLabel getLabelInfoIdHardware() {
        return lblInfoIdHard;
    }

    public JLabel getLabelInfoSn() {
        return lblInfoSn;
    }

    public JTextField getTxtSn(){
        return txtSn;
    }
    public JTextField getTxtBitArranque(){
        return txtMarcaArranque;
    }
    public JTextField getTxtIdHardware(){
        return txtIdHardware;
    }
    public JTextField getTxtSercidor(){
        return txtServidor;
    }
    public FrmUser getFrmUsuario(){
        return frmUsuario;
    }
    public ControladorFrmPasePrincipal getControladorFrmPrincipalPase(){
        return controladorFrmPasePrincipal;
    }
}
