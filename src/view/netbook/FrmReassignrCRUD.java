/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.netbook;

import controller.data.ControladorReasignacion;
import controller.form.ControladorFrmReasignarCRUD;
import hibernate.dao.ReasignacionDAO;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import model.constant.ListaCaracteresNoValidos;
import model.domain.Alumno;
import model.domain.Persona;
import model.domain.Profesor;
import model.domain.Reasignacion;
import view.main.FrmPrincipal;

/**
 *
 * @author wally86
 */
public class FrmReassignrCRUD extends javax.swing.JInternalFrame {

    private ControladorReasignacion controladorReasignacion;
    private ControladorFrmReasignarCRUD controladorFrmReasignarCRUD;
    private FrmPrincipal frmPrincipal;
    private char tipoOperacion;
    private Persona personaTitularNuevo;
    private Alumno alumnoTitularNuevo;
    private char tipoTitular;

    /**
     * Creates new form FrmReasignarPrincipal
     *
     * @param frmPrincipal
     * @param tipoOperacion
     */
    public FrmReassignrCRUD(FrmPrincipal frmPrincipal, char tipoOperacion) {
        initComponents();
        this.controladorReasignacion = new ControladorReasignacion();
        this.frmPrincipal = frmPrincipal;
        this.personaTitularNuevo = null;
        this.alumnoTitularNuevo = null;
        controladorFrmReasignarCRUD = new ControladorFrmReasignarCRUD();
        this.tipoOperacion = tipoOperacion;
        controladorFrmReasignarCRUD.ocultarLabelInformativo(lblInfoDniAlumno);
        cargarDatos();
    }

    private void cargarDatos() {
        switch (tipoOperacion) {
            case 'a':
                getControladorFrmReasignarCRUD().desactivarCamposParaAlta(this);
                try {
                    txtNumeroSerie.setText(getFrmPrincipal().getControladorFrmPrincipal().getFrmUsuario(getFrmPrincipal()).getControladorAlumno().getNetbook().getIdNetbook());
                    txtIdHardware.setText(getFrmPrincipal().getControladorFrmPrincipal().getFrmUsuario(getFrmPrincipal()).getControladorAlumno().getNetbook().getIdHardware());
                    txtDniAlumno.setText(String.valueOf(getFrmPrincipal().getControladorFrmPrincipal().getFrmUsuario(getFrmPrincipal()).getControladorAlumno().getPersonaAlumno().getDni()));
                    txtNombreAlumno.setText(getFrmPrincipal().getControladorFrmPrincipal().getFrmUsuario(getFrmPrincipal()).getControladorAlumno().getPersonaAlumno().getNombre() + " " + getFrmPrincipal().getControladorFrmPrincipal().getFrmUsuario(getFrmPrincipal()).getControladorAlumno().getPersonaAlumno().getApellido());
                    txtCursoAlumno.setText(getFrmPrincipal().getControladorFrmPrincipal().getFrmUsuario(getFrmPrincipal()).getControladorAlumno().getAlumno().getCurso() + "º " + getFrmPrincipal().getControladorFrmPrincipal().getFrmUsuario(getFrmPrincipal()).getControladorAlumno().getAlumno().getDivision() + "º");
                    this.tipoTitular = 'a';
                } catch (NullPointerException ex) {
                    txtNumeroSerie.setText(getFrmPrincipal().getControladorFrmPrincipal().getFrmUsuario(getFrmPrincipal()).getControladorProfesor().getNetbook().getIdNetbook());
                    txtIdHardware.setText(getFrmPrincipal().getControladorFrmPrincipal().getFrmUsuario(getFrmPrincipal()).getControladorProfesor().getNetbook().getIdHardware());
                    txtDniAlumno.setText(String.valueOf(getFrmPrincipal().getControladorFrmPrincipal().getFrmUsuario(getFrmPrincipal()).getControladorProfesor().getPersonaProfesor().getDni()));
                    txtNombreAlumno.setText(getFrmPrincipal().getControladorFrmPrincipal().getFrmUsuario(getFrmPrincipal()).getControladorProfesor().getPersonaProfesor().getNombre() + " " + getFrmPrincipal().getControladorFrmPrincipal().getFrmUsuario(getFrmPrincipal()).getControladorProfesor().getPersonaProfesor().getApellido());
                    txtCursoAlumno.setText("DOCENTE");
                    this.tipoTitular = 'd';
                }
                break;
            case 'v':
                break;
            case 'm':
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAceptar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        pnlNetbook = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNumeroSerie = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtIdHardware = new javax.swing.JTextField();
        pnlTitular = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDniAlumno = new javax.swing.JTextField();
        txtNombreAlumno = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCursoAlumno = new javax.swing.JTextField();
        pnlTitularNuevo = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtDniTitularNuevo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNomyApeNuevo = new javax.swing.JTextField();
        lblInfoDniAlumno = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCursoNuevo = new javax.swing.JTextField();
        lblEstadoDniAlumno = new javax.swing.JLabel();
        btnBuscarTitularNuevo = new javax.swing.JButton();

        setTitle("REASIGNACIÓN DE NETBOOK'S");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/model/image/laptop112.png"))); // NOI18N
        setMinimumSize(new java.awt.Dimension(413, 480));
        setPreferredSize(new java.awt.Dimension(413, 480));
        getContentPane().setLayout(null);

        btnAceptar.setText("Guardar");
        btnAceptar.setMaximumSize(new java.awt.Dimension(110, 33));
        btnAceptar.setMinimumSize(new java.awt.Dimension(110, 33));
        btnAceptar.setPreferredSize(new java.awt.Dimension(110, 33));
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAceptar);
        btnAceptar.setBounds(10, 415, 110, 33);

        btnSalir.setText("Salir");
        btnSalir.setMaximumSize(new java.awt.Dimension(110, 33));
        btnSalir.setMinimumSize(new java.awt.Dimension(110, 33));
        btnSalir.setPreferredSize(new java.awt.Dimension(110, 33));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir);
        btnSalir.setBounds(260, 415, 110, 33);

        pnlNetbook.setBorder(javax.swing.BorderFactory.createTitledBorder("Netbook"));
        pnlNetbook.setLayout(null);

        jLabel1.setText("Numero de Serie");
        pnlNetbook.add(jLabel1);
        jLabel1.setBounds(10, 20, 120, 14);

        txtNumeroSerie.setMinimumSize(new java.awt.Dimension(180, 26));
        txtNumeroSerie.setPreferredSize(new java.awt.Dimension(180, 26));
        pnlNetbook.add(txtNumeroSerie);
        txtNumeroSerie.setBounds(130, 15, 180, 26);

        jLabel5.setText("Id Hardware");
        pnlNetbook.add(jLabel5);
        jLabel5.setBounds(10, 60, 110, 14);

        txtIdHardware.setPreferredSize(new java.awt.Dimension(180, 26));
        pnlNetbook.add(txtIdHardware);
        txtIdHardware.setBounds(130, 60, 180, 26);

        getContentPane().add(pnlNetbook);
        pnlNetbook.setBounds(10, 10, 370, 110);

        pnlTitular.setBorder(javax.swing.BorderFactory.createTitledBorder("Titular"));
        pnlTitular.setLayout(null);

        jLabel3.setText("Nombre y Apellido");
        pnlTitular.add(jLabel3);
        jLabel3.setBounds(10, 55, 150, 30);

        jLabel2.setText("DNI Titular");
        pnlTitular.add(jLabel2);
        jLabel2.setBounds(10, 20, 100, 14);

        txtDniAlumno.setMinimumSize(new java.awt.Dimension(180, 26));
        txtDniAlumno.setPreferredSize(new java.awt.Dimension(180, 26));
        pnlTitular.add(txtDniAlumno);
        txtDniAlumno.setBounds(150, 15, 180, 26);

        txtNombreAlumno.setMinimumSize(new java.awt.Dimension(180, 26));
        txtNombreAlumno.setPreferredSize(new java.awt.Dimension(180, 26));
        pnlTitular.add(txtNombreAlumno);
        txtNombreAlumno.setBounds(150, 60, 180, 26);

        jLabel4.setText("Curso");
        pnlTitular.add(jLabel4);
        jLabel4.setBounds(10, 100, 48, 14);

        txtCursoAlumno.setMinimumSize(new java.awt.Dimension(180, 26));
        txtCursoAlumno.setPreferredSize(new java.awt.Dimension(180, 26));
        pnlTitular.add(txtCursoAlumno);
        txtCursoAlumno.setBounds(150, 100, 180, 26);

        getContentPane().add(pnlTitular);
        pnlTitular.setBounds(10, 120, 390, 150);

        pnlTitularNuevo.setBorder(javax.swing.BorderFactory.createTitledBorder("Titular Nuevo"));
        pnlTitularNuevo.setLayout(null);

        jLabel6.setText("Ingrese DNI");
        pnlTitularNuevo.add(jLabel6);
        jLabel6.setBounds(10, 20, 90, 14);

        txtDniTitularNuevo.setPreferredSize(new java.awt.Dimension(90, 26));
        txtDniTitularNuevo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDniTitularNuevoFocusGained(evt);
            }
        });
        txtDniTitularNuevo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDniTitularNuevoKeyTyped(evt);
            }
        });
        pnlTitularNuevo.add(txtDniTitularNuevo);
        txtDniTitularNuevo.setBounds(150, 15, 90, 26);

        jLabel7.setText("Nombre y Apellido");
        pnlTitularNuevo.add(jLabel7);
        jLabel7.setBounds(10, 60, 130, 20);
        pnlTitularNuevo.add(txtNomyApeNuevo);
        txtNomyApeNuevo.setBounds(150, 55, 180, 20);

        lblInfoDniAlumno.setFont(new java.awt.Font("Cantarell", 2, 10)); // NOI18N
        lblInfoDniAlumno.setForeground(new java.awt.Color(249, 27, 27));
        lblInfoDniAlumno.setText("Solo caracteres numéricos");
        pnlTitularNuevo.add(lblInfoDniAlumno);
        lblInfoDniAlumno.setBounds(150, 40, 180, 14);

        jLabel8.setText("Curso");
        pnlTitularNuevo.add(jLabel8);
        jLabel8.setBounds(10, 100, 60, 20);

        txtCursoNuevo.setPreferredSize(new java.awt.Dimension(180, 26));
        pnlTitularNuevo.add(txtCursoNuevo);
        txtCursoNuevo.setBounds(150, 95, 180, 26);

        lblEstadoDniAlumno.setMaximumSize(new java.awt.Dimension(20, 20));
        lblEstadoDniAlumno.setMinimumSize(new java.awt.Dimension(20, 20));
        lblEstadoDniAlumno.setPreferredSize(new java.awt.Dimension(20, 20));
        pnlTitularNuevo.add(lblEstadoDniAlumno);
        lblEstadoDniAlumno.setBounds(240, 17, 20, 20);

        btnBuscarTitularNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/model/image/magnifier12.png"))); // NOI18N
        btnBuscarTitularNuevo.setToolTipText("Buscar");
        btnBuscarTitularNuevo.setMaximumSize(new java.awt.Dimension(40, 35));
        btnBuscarTitularNuevo.setMinimumSize(new java.awt.Dimension(40, 35));
        btnBuscarTitularNuevo.setPreferredSize(new java.awt.Dimension(40, 35));
        btnBuscarTitularNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarTitularNuevoActionPerformed(evt);
            }
        });
        pnlTitularNuevo.add(btnBuscarTitularNuevo);
        btnBuscarTitularNuevo.setBounds(275, 13, 40, 35);

        getContentPane().add(pnlTitularNuevo);
        pnlTitularNuevo.setBounds(10, 270, 390, 140);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // TODO add your handling code here:
        int respuesta = JOptionPane.showConfirmDialog(this, "¿Esta seguro de guardar el Registro?", "Guardar", JOptionPane.YES_NO_OPTION);
        if (respuesta == JOptionPane.YES_OPTION) {
            //verificamos si el titular nuevo es valido
            if (controladorFrmReasignarCRUD.isEstadoDniAlumno()) {
                if (!controladorReasignacion.verificarExistencia(this,tipoTitular)) {
                    //verificar que la net este en ossciosa
                    if (!frmPrincipal.getControladorFrmPrincipal().getFrmUsuario(frmPrincipal).getControladorAlumno().getNetbook().isEstado()) {
                        //verifica si esta en  migracion la netbook                        
                        try {
                            if (frmPrincipal.getControladorFrmPrincipal().getFrmMigrarPrincipal(frmPrincipal).getControladorDestino().verificarExistencia(frmPrincipal.getControladorFrmPrincipal().getFrmMigrarPrincipal(frmPrincipal))) {
                                //verificamos si no se realizo la migracion
                                if (!frmPrincipal.getControladorFrmPrincipal().getFrmMigrarPrincipal(frmPrincipal).getControladorDestino().obtenerDestinoSegunPersona(frmPrincipal.getControladorFrmPrincipal().getFrmUsuario(frmPrincipal).getControladorAlumno().getPersonaAlumno()).isEstado()) {
                                    //verificamos si se le reasigna al mismo titular
                                    switch (tipoTitular) {
                                        case 'a':
                                            if (String.valueOf(frmPrincipal.getControladorFrmPrincipal().getFrmUsuario(frmPrincipal).getControladorAlumno().getPersonaAlumno().getDni()).equals(txtDniTitularNuevo.getText())) {
                                                JOptionPane.showMessageDialog(this, "Esta por reasignar la net al mismo titular");

                                            }
                                            break;
                                        case 'd':
                                            if (String.valueOf(frmPrincipal.getControladorFrmPrincipal().getFrmUsuario(frmPrincipal).getControladorProfesor().getPersonaProfesor().getDni()).equals(txtDniTitularNuevo.getText())) {
                                                JOptionPane.showMessageDialog(this, "Esta por reasignar la net al mismo titular");

                                            }
                                            break;
                                    }
                                    controladorReasignacion.guardarReasignacion(this);
                                    frmPrincipal.getControladorFrmPrincipal().getFrmUsuario(frmPrincipal).getControladorFormularioUsuario().actualizarCantidadReasignaciones(frmPrincipal.getControladorFrmPrincipal().getFrmUsuario(frmPrincipal));
                                    dispose();

                                } else {
                                    JOptionPane.showMessageDialog(this, "No se puede realizar la reasignación, la netbook ya migro");
                                }
                            }
                        } catch (Exception e) {
                            if (String.valueOf(frmPrincipal.getControladorFrmPrincipal().getFrmUsuario(frmPrincipal).getControladorAlumno().getPersonaAlumno().getDni()).equals(txtDniTitularNuevo.getText())) {
                                JOptionPane.showMessageDialog(this, "Esta por reasignar la net al mismo titular");
                            }
                            controladorReasignacion.guardarReasignacion(this);
                            frmPrincipal.getControladorFrmPrincipal().getFrmUsuario(frmPrincipal).getControladorFormularioUsuario().actualizarCantidadReasignaciones(frmPrincipal.getControladorFrmPrincipal().getFrmUsuario(frmPrincipal));
                            dispose();
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "Imposible Reasignar, La netbook no se encuentra osciosa");
                    }
                } else {
                        ReasignacionDAO reasignacionDAO = new ReasignacionDAO();
                         Reasignacion reasignacion=null;
                        switch(tipoTitular){
                            case 'a':
                               reasignacion= reasignacionDAO.obtenerReasignacionSegunNetbook(frmPrincipal.getControladorFrmPrincipal().getFrmUsuario(frmPrincipal).getControladorAlumno().getNetbook());
                                break;
                            case 'd':
                                reasignacion= reasignacionDAO.obtenerReasignacionSegunNetbook(frmPrincipal.getControladorFrmPrincipal().getFrmUsuario(frmPrincipal).getControladorProfesor().getNetbook());
                        }
                        if(reasignacion.isEstado()){
                            controladorReasignacion.guardarReasignacion(this);
                                    frmPrincipal.getControladorFrmPrincipal().getFrmUsuario(frmPrincipal).getControladorFormularioUsuario().actualizarCantidadReasignaciones(frmPrincipal.getControladorFrmPrincipal().getFrmUsuario(frmPrincipal));
                                    dispose();
                        }else{
                          JOptionPane.showMessageDialog(this, "Imposible Reasignar, La netbook se agregó para una reasignación y esta pendiente");
                
                        }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Verifique que ingreso un titular Nuevo correcto");
                controladorFrmReasignarCRUD.agregarImagenEstadoLabel(lblEstadoDniAlumno, "/modelo/imagen/no.png");
            }
        }

    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        int respuesta = JOptionPane.showConfirmDialog(this, "¿Esta seguro de salir?", "Salir", JOptionPane.YES_NO_OPTION);
        if (respuesta == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnBuscarTitularNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarTitularNuevoActionPerformed
        // TODO add your handling code here:
        int dniNuevo = 0;
        Profesor profesorNuevotitular = null;
        try {
            dniNuevo = Integer.parseInt(txtDniTitularNuevo.getText());
            personaTitularNuevo = getFrmPrincipal().getControladorFrmPrincipal().getFrmUsuario(getFrmPrincipal()).getControladorPersona().buscarPersonaPorDni(dniNuevo);
            txtNomyApeNuevo.setText(getPersonaTitularNuevo().getNombre() + " " + getPersonaTitularNuevo().getApellido());
            try {
                alumnoTitularNuevo = getFrmPrincipal().getControladorFrmPrincipal().getFrmUsuario(getFrmPrincipal()).getControladorAlumno().buscarAlumnoPorDni(dniNuevo);
                txtCursoNuevo.setText(getAlumnoTitularNuevo().getCurso() + "º " + getAlumnoTitularNuevo().getDivision() + "º");
            } catch (Exception e) {
                txtCursoNuevo.setText("DOCENTE");
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Verifique el DNI ingresado");
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "No se encuentra al nuevo titular");
            txtCursoNuevo.setText("");
            txtNomyApeNuevo.setText("");
            getControladorFrmReasignarCRUD().ocultarLabelInformativo(lblEstadoDniAlumno);
        }
    }//GEN-LAST:event_btnBuscarTitularNuevoActionPerformed

    private void txtDniTitularNuevoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniTitularNuevoKeyTyped
        // TODO add your handling code here:
        String dni = txtDniTitularNuevo.getText();
        String pathImagen = "/model/image/";
        if (dni.length() >= 8) {
            evt.consume();
        }
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != KeyEvent.VK_BACK_SPACE && evt.getKeyChar() != KeyEvent.VK_ENTER) {
            evt.consume();
            getControladorFrmReasignarCRUD().mostrarLabelInformativo(lblInfoDniAlumno);

        } else {
            getControladorFrmReasignarCRUD().ocultarLabelInformativo(lblInfoDniAlumno);
        }
        for (Character c : ListaCaracteresNoValidos.LISTA) {
            if (evt.getKeyChar() == c) {
                evt.consume();
                getControladorFrmReasignarCRUD().mostrarLabelInformativo(lblInfoDniAlumno);
            }
        }
        if (((dni.length() == 7) || (dni.length() == 8)) && (!dni.isEmpty()) && (Character.isDigit(evt.getKeyChar()))) {
            pathImagen += "si.png";
            getControladorFrmReasignarCRUD().setEstadoDniAlumno(true);
        } else {
            getControladorFrmReasignarCRUD().setEstadoDniAlumno(false);
            pathImagen += "no.png";
        }
        getControladorFrmReasignarCRUD().agregarImagenEstadoLabel(lblEstadoDniAlumno, pathImagen);
        getControladorFrmReasignarCRUD().mostrarLabelInformativo(lblEstadoDniAlumno);
    }//GEN-LAST:event_txtDniTitularNuevoKeyTyped

    private void txtDniTitularNuevoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDniTitularNuevoFocusGained
        // TODO add your handling code here:
        txtDniTitularNuevo.setText("");
        getControladorFrmReasignarCRUD().setEstadoDniAlumno(false);
        getControladorFrmReasignarCRUD().ocultarLabelInformativo(lblEstadoDniAlumno);
    }//GEN-LAST:event_txtDniTitularNuevoFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnBuscarTitularNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblEstadoDniAlumno;
    private javax.swing.JLabel lblInfoDniAlumno;
    private javax.swing.JPanel pnlNetbook;
    private javax.swing.JPanel pnlTitular;
    private javax.swing.JPanel pnlTitularNuevo;
    private javax.swing.JTextField txtCursoAlumno;
    private javax.swing.JTextField txtCursoNuevo;
    private javax.swing.JTextField txtDniAlumno;
    private javax.swing.JTextField txtDniTitularNuevo;
    private javax.swing.JTextField txtIdHardware;
    private javax.swing.JTextField txtNombreAlumno;
    private javax.swing.JTextField txtNomyApeNuevo;
    private javax.swing.JTextField txtNumeroSerie;
    // End of variables declaration//GEN-END:variables

    public JTextField getTxtNumeroSerie() {
        return txtNumeroSerie;
    }

    public JTextField getTxtIdHardware() {
        return txtIdHardware;
    }

    public JTextField getTxtDniAlumnoTitular() {
        return txtDniAlumno;
    }

    public JTextField getTxtNombreApellidoTitular() {
        return txtNombreAlumno;
    }

    public JTextField getTxtCursoTitular() {
        return txtCursoAlumno;
    }

    public JTextField getTxtDniNuevoTitular() {
        return txtDniTitularNuevo;
    }

    public JTextField getTxtNombreApellidoNuevoTitular() {
        return txtNomyApeNuevo;
    }

    public JTextField getTxtCursoNuevoTitular() {
        return txtCursoNuevo;
    }

    /**
     * @return the controladorFrmReasignarCRUD
     */
    public ControladorFrmReasignarCRUD getControladorFrmReasignarCRUD() {
        return controladorFrmReasignarCRUD;
    }

    /**
     * @return the frmPrincipal
     */
    public FrmPrincipal getFrmPrincipal() {
        return frmPrincipal;
    }

    /**
     * @return the controladorReasignacion
     */
    public ControladorReasignacion getControladorReasignacion() {
        return controladorReasignacion;
    }

    /**
     * @return the personaTitularNuevo
     */
    public Persona getPersonaTitularNuevo() {
        return personaTitularNuevo;
    }

    /**
     * @return the alumnoTitularNuevo
     */
    public Alumno getAlumnoTitularNuevo() {
        return alumnoTitularNuevo;
    }

}
